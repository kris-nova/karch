#!/bin/bash
# =========================================================================== #
#            MIT License Copyright (c) 2022 Kris Nóva <kris@nivenly.com>      #
#                                                                             #
#                 ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓                 #
#                 ┃   ███╗   ██╗ ██████╗ ██╗   ██╗ █████╗   ┃                 #
#                 ┃   ████╗  ██║██╔═████╗██║   ██║██╔══██╗  ┃                 #
#                 ┃   ██╔██╗ ██║██║██╔██║██║   ██║███████║  ┃                 #
#                 ┃   ██║╚██╗██║████╔╝██║╚██╗ ██╔╝██╔══██║  ┃                 #
#                 ┃   ██║ ╚████║╚██████╔╝ ╚████╔╝ ██║  ██║  ┃                 #
#                 ┃   ╚═╝  ╚═══╝ ╚═════╝   ╚═══╝  ╚═╝  ╚═╝  ┃                 #
#                 ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛                 #
#                                                                             #
#                        This machine kills fascists.                         #
#                                                                             #
# =========================================================================== #

hostname=$(cat /proc/sys/kernel/hostname)
domain="nivenly.com"
ip="10.6.6.100"
podcidr="10.217.0.0/16"  # Cilium
#podcidr="192.168.0.0/16" # Calico
#podcidr="10.85.0.0/16"   # Flannel
#podcidr="10.85.0.0/16"   # Bridge


echo "--------------------------------------------------------------"
echo ""
echo "HOSTNAME               :    ${hostname}"
echo "CONTROL PLANE ENDPOINT :    ${domain}"
echo "DOMAIN CERT SANS       :    ${domain}"
echo "API SERVER IP ADDR     :    ${ip}"
echo ""
echo "--------------------------------------------------------------"

# Reset all the kubernetes things
karch-reset

# kubeadm init
#
# Flags:
#      --apiserver-advertise-address string   The IP address the API Server will advertise it's listening on. If not set the default network interface will be used.
#      --apiserver-bind-port int32            Port for the API Server to bind to. (default 6443)
#      --apiserver-cert-extra-sans strings    Optional extra Subject Alternative Names (SANs) to use for the API Server serving certificate. Can be both IP addresses and DNS names.
#      --cert-dir string                      The path where to save and store the certificates. (default "/etc/kubernetes/pki")
#      --certificate-key string               Key used to encrypt the control-plane certificates in the kubeadm-certs Secret.
#      --config string                        Path to a kubeadm configuration file.
#      --control-plane-endpoint string        Specify a stable IP address or DNS name for the control plane.
#      --cri-socket string                    Path to the CRI socket to connect. If empty kubeadm will try to auto-detect this value; use this option only if you have more than one CRI installed or if you have non-standard CRI socket.
#      --dry-run                              Don't apply any changes; just output what would be done.
#      --feature-gates string                 A set of key=value pairs that describe feature gates for various features. Options are:
#                                             PublicKeysECDSA=true|false (ALPHA - default=false)
#                                             RootlessControlPlane=true|false (ALPHA - default=false)
#                                             UnversionedKubeletConfigMap=true|false (BETA - default=true)
#  -h, --help                                 help for init
#      --ignore-preflight-errors strings      A list of checks whose errors will be shown as warnings. Example: 'IsPrivilegedUser,Swap'. Value 'all' ignores errors from all checks.
#      --image-repository string              Choose a container registry to pull control plane images from (default "k8s.gcr.io")
#      --kubernetes-version string            Choose a specific Kubernetes version for the control plane. (default "stable-1")
#      --node-name string                     Specify the node name.
#      --patches string                       Path to a directory that contains files named "target[suffix][+patchtype].extension". For example, "kube-apiserver0+merge.yaml" or just "etcd.json". "target" can be one of "kube-apiserver", "kube-controller-manager", "kube-scheduler", "etcd". "patchtype" can be one of "strategic", "merge" or "json" and they match the patch formats supported by kubectl. The default "patchtype" is "strategic". "extension" must be either "json" or "yaml". "suffix" is an optional string that can be used to determine which patches are applied first alpha-numerically.
#      --pod-network-cidr string              Specify range of IP addresses for the pod network. If set, the control plane will automatically allocate CIDRs for every node.
#      --service-cidr string                  Use alternative range of IP address for service VIPs. (default "10.96.0.0/12")
#      --service-dns-domain string            Use alternative domain for services, e.g. "myorg.internal". (default "cluster.local")
#      --skip-certificate-key-print           Don't print the key used to encrypt the control-plane certificates.
#      --skip-phases strings                  List of phases to be skipped
#      --skip-token-print                     Skip printing of the default bootstrap token generated by 'kubeadm init'.
#      --token string                         The token to use for establishing bidirectional trust between nodes and control-plane nodes. The format is [a-z0-9]{6}\.[a-z0-9]{16} - e.g. abcdef.0123456789abcdef
#      --token-ttl duration                   The duration before the token is automatically deleted (e.g. 1s, 2m, 3h). If set to '0', the token will never expire (default 24h0m0s)
#      --upload-certs                         Upload control-plane certificates to the kubeadm-certs Secret.
#
# Global Flags:
#      --add-dir-header           If true, adds the file directory to the header of the log messages
#      --log-file string          If non-empty, use this log file
#      --log-file-max-size uint   Defines the maximum size a log file can grow to. Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)
#      --one-output               If true, only write logs to their native severity level (vs also writing to each lower severity level)
#      --rootfs string            [EXPERIMENTAL] The path to the 'real' host root filesystem.
#      --skip-headers             If true, avoid header prefixes in the log messages
#      --skip-log-headers         If true, avoid headers when opening log files
#  -v, --v Level                  number for the log level verbosity
kubeadm init \
        --cri-socket unix:///var/run/crio/crio.sock \
        --pod-network-cidr="$podcidr" \
        --apiserver-advertise-address="$ip" \
        --apiserver-cert-extra-sans="$domain" \
        --control-plane-endpoint="$domain" \
        --node-name="$host"

echo "--------------------------------------------------------------"
echo ""
cp -v /etc/kubernetes/admin.conf ${HOME}/.kube/config
echo ""
echo "--------------------------------------------------------------"

